// Job o Listener Send mail 1 week

import java.time.LocalDateTime
import java.time.temporal.ChronoUnit
import java.time.format.DateTimeFormatter

def issueKey = "HST-14841" //issue.key

def result = get('/rest/api/2/issue/' + issueKey)
        .header('Content-Type', 'application/json')
        .asObject(Map)

if (result.status == 200) {
    def fechaHoy = LocalDateTime.now()
    logger.info('Fecha Hoy -> ' + fechaHoy)
    def DataComment = result.body.fields.customfield_10564
    def Id_reportero = result.body.fields.reporter.accountId
    def name_reportero = result.body.fields.reporter.displayName

    // Agregar la hora, minutos, segundos y zona horaria predeterminados si no están presentes en DataComment
    if (!DataComment.contains('T')) {
        DataComment = DataComment + 'T00:00:00.000Z'
    }

    def formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd'T'HH:mm:ss.SSSX")
    def dateTime = LocalDateTime.parse(DataComment, formatter)
    logger.info('Fecha Update -> ' + dateTime)

    // Calcular la diferencia en días entre las dos fechas
    long daysDifference = ChronoUnit.DAYS.between(dateTime, fechaHoy)

    if (daysDifference >= 0) {
        logger.info('La fecha de actualización es 1 semana posterior a la fecha de hoy. Ejecutando acciones...')

        if (result.body.fields.status.name in ["More info Required", "Fixed", "wait on user"]) {
            // Realizar la transición 531 antes de comentar
            def transition531Resp = post("/rest/api/2/issue/${issueKey}/transitions")
                .header('Content-Type', 'application/json')
                .body([
                        transition: [
                            id: "531" // ID de la transición "531"
                        ]
                ])
                .asObject(Map)

            if (transition531Resp.status == 204) {
                logger.info('Transición 531 completada con éxito.')

                // Realizar el comentario
                def commentResp = post("/rest/api/2/issue/${issueKey}/comment")
                    .header('Content-Type', 'application/json')
                    .body([
                            body: '''Hi reporter, 

We would like to inform you that there is an open ticket that requires your attention. Your prompt response in providing the requested information is greatly appreciated as it will help us expedite the resolution process. If we do not receive the necessary details within a reasonable timeframe, it may be necessary to automatically close the ticket. Nevertheless, we want to assure you that you will have the opportunity to reopen the ticket within the next 14 days. If this time limit expires, we kindly ask you to submit a new ticket.
Thank you for your understanding and cooperation.

Best regards,

Hola Markets Team'''
                    ])
                    .asObject(Map)

                if (commentResp.status >= 200 && commentResp.status < 300) {
                    logger.info('Comentario enviado con éxito.')
                    sleep(500)
                    // Realizar la transición 521 después del comentario
                    def transition521Resp = post("/rest/api/2/issue/${issueKey}/transitions")
                        .header('Content-Type', 'application/json')
                        .body([
                                transition: [
                                    id: "521" // ID de la transición "521"
                                ]
                        ])
                        .asObject(Map)

                    if (transition521Resp.status == 204) {
                        logger.info('Transición 521 completada con éxito.')
                    } else {
                        logger.error("Error en la transición 521: ${transition521Resp.status} - ${transition521Resp.body}")
                    }
                } else {
                    logger.error("Error al enviar el comentario: ${commentResp.status} - ${commentResp.body}")
                }
            } else {
                logger.error("Error en la transición 531: ${transition531Resp.status} - ${transition531Resp.body}")
            }
        } else {
            logger.info('El estado actual no requiere acción.')
        }
    } else {
        logger.info('La fecha de actualización es menos de 1 semana posterior a la fecha de hoy.')
    }
} else {
    return "Error al encontrar el problema: Estado: ${result.status} ${result.body}"
}
